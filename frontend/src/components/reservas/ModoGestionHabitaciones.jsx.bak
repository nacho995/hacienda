"use client";

import { useState, useEffect } from 'react';
import { FaUserCog, FaUsers, FaChevronRight, FaEnvelope, FaBed, FaTimes } from 'react-icons/fa';
import { useReserva } from '@/context/ReservaContext';

const ModoGestionHabitaciones = ({ onModeSelect, numeroHabitaciones }) => {
  const { formData, updateFormSection } = useReserva();
  const [selectedMode, setSelectedMode] = useState(formData.modoGestionHabitaciones || null);
  const [habitacionesSeleccionadas, setHabitacionesSeleccionadas] = useState(formData.habitacionesSeleccionadas || []);
  const [showErrorModal, setShowErrorModal] = useState(false);
  const [errorMessage, setErrorMessage] = useState('');
  
  // Tipos de habitaciones disponibles
  const tiposHabitaciones = [
    { id: 'individual', nombre: 'Individual', capacidad: 1, precio: '€80/noche', descripcion: 'Habitación con cama individual' },
    { id: 'doble', nombre: 'Doble', capacidad: 2, precio: '€120/noche', descripcion: 'Habitación con cama matrimonial' },
    { id: 'twin', nombre: 'Twin', capacidad: 2, precio: '€120/noche', descripcion: 'Habitación con dos camas individuales' },
    { id: 'suite', nombre: 'Suite', capacidad: 2, precio: '€180/noche', descripcion: 'Suite con salón y vistas al jardín' },
    { id: 'familiar', nombre: 'Familiar', capacidad: 4, precio: '€220/noche', descripcion: 'Habitación amplia para familias' },
  ];

  useEffect(() => {
    // Si ya hay habitaciones seleccionadas en el contexto, las cargamos
    if (formData.habitacionesSeleccionadas && formData.habitacionesSeleccionadas.length > 0) {
      setHabitacionesSeleccionadas(formData.habitacionesSeleccionadas);
    }
  }, [formData.habitacionesSeleccionadas]);

  const handleSelectMode = (mode) => {
    setSelectedMode(mode);
    updateFormSection('modoGestionHabitaciones', mode);
  };

  const toggleHabitacion = (habitacionId) => {
    const habitacion = tiposHabitaciones.find(h => h.id === habitacionId);
    
    if (!habitacion) return;
    
    // Verificar si ya está seleccionada
    const isSelected = habitacionesSeleccionadas.some(h => h.id === habitacionId);
    
    if (isSelected) {
      // Si ya está seleccionada, la quitamos
      const nuevasHabitaciones = habitacionesSeleccionadas.filter(h => h.id !== habitacionId);
      setHabitacionesSeleccionadas(nuevasHabitaciones);
      updateFormSection('habitacionesSeleccionadas', nuevasHabitaciones);
    } else {
      // Si no está seleccionada, verificamos si ya alcanzamos el límite
      if (habitacionesSeleccionadas.length >= numeroHabitaciones) {
        setErrorMessage(`Solo puede seleccionar ${numeroHabitaciones} habitación(es) según lo indicado en el paso anterior.`);
        setShowErrorModal(true);
        return;
      }
      
      // Si no hemos alcanzado el límite, la añadimos
      const nuevasHabitaciones = [...habitacionesSeleccionadas, habitacion];
      setHabitacionesSeleccionadas(nuevasHabitaciones);
      updateFormSection('habitacionesSeleccionadas', nuevasHabitaciones);
    }
  };

  const handleContinue = () => {
    if (selectedMode === 'usuario' && habitacionesSeleccionadas.length < numeroHabitaciones) {
      setErrorMessage(`Debe seleccionar ${numeroHabitaciones} habitación(es) antes de continuar.`);
      setShowErrorModal(true);
      return;
    }
    
    if (selectedMode) {
      // Guardar en el contexto y pasar al componente padre
      updateFormSection('modoGestionHabitaciones', selectedMode);
      updateFormSection('habitacionesSeleccionadas', habitacionesSeleccionadas);
      onModeSelect(selectedMode);
    }
  };

  return (
    <div className="space-y-8">
      {/* Modal de error */}
      {showErrorModal && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
          <div className="bg-white rounded-xl p-6 max-w-md w-full">
            <div className="flex justify-between items-center mb-4">
              <h2 className="text-xl font-bold text-red-600">Error</h2>
              <button 
                onClick={() => setShowErrorModal(false)}
                className="text-gray-500 hover:text-gray-700"
              >
                <FaTimes className="text-xl" />
              </button>
            </div>
            <p className="text-gray-700 mb-6">{errorMessage}</p>
            <div className="flex justify-end">
              <button
                onClick={() => setShowErrorModal(false)}
                className="px-4 py-2 bg-[var(--color-primary)] text-white rounded-lg"
              >
                Entendido
              </button>
            </div>
          </div>
        </div>
      )}
      
      <div>
        <h2 className="text-2xl font-bold text-[var(--color-primary)] mb-4">
          Gestión de Habitaciones
        </h2>
        <p className="text-gray-600 mb-6">
          Seleccione cómo desea gestionar la asignación de habitaciones para su evento.
          {numeroHabitaciones > 0 && (
            <span className="block mt-2 font-medium">Número de habitaciones a seleccionar: {numeroHabitaciones}</span>
          )}
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* Opción 1: Gestión por el usuario */}
        <div
          onClick={() => handleSelectMode('usuario')}
          className={`p-6 rounded-2xl cursor-pointer transition-all duration-300 border-2 ${
            selectedMode === 'usuario'
              ? 'border-[var(--color-primary)] bg-[var(--color-primary)]/10'
              : 'border-gray-200 hover:border-[var(--color-primary)]/50'
          }`}
        >
          <div className="flex items-center mb-4">
            <div className="w-16 h-16 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-4">
              <FaUsers className="w-8 h-8 text-[var(--color-primary)]" />
            </div>
            <div>
              <h3 className="text-lg font-semibold">Gestión por el Organizador</h3>
              <p className="text-sm text-gray-500">Usted asigna las habitaciones y huéspedes</p>
            </div>
          </div>
          
          <ul className="space-y-2 text-gray-600 mb-4">
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-primary)]"></span>
              </span>
              <span>Usted asigna las habitaciones para cada huésped</span>
            </li>
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-primary)]"></span>
              </span>
              <span>Usted establece las fechas de entrada y salida</span>
            </li>
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-primary)]"></span>
              </span>
              <span>Información completa en la confirmación de reserva</span>
            </li>
          </ul>
          
          <div className="text-sm text-gray-500 italic">
            Recomendado si ya tiene la información de todos los huéspedes
          </div>
        </div>

        {/* Opción 2: Gestión por la hacienda */}
        <div
          onClick={() => handleSelectMode('hacienda')}
          className={`p-6 rounded-2xl cursor-pointer transition-all duration-300 border-2 ${
            selectedMode === 'hacienda'
              ? 'border-[var(--color-primary)] bg-[var(--color-primary)]/10'
              : 'border-gray-200 hover:border-[var(--color-primary)]/50'
          }`}
        >
          <div className="flex items-center mb-4">
            <div className="w-16 h-16 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-4">
              <FaUserCog className="w-8 h-8 text-[var(--color-accent)]" />
            </div>
            <div>
              <h3 className="text-lg font-semibold">Gestión por la Hacienda</h3>
              <p className="text-sm text-gray-500">El personal de la hacienda gestiona los detalles</p>
            </div>
          </div>
          
          <ul className="space-y-2 text-gray-600 mb-4">
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-accent)]"></span>
              </span>
              <span>El personal asignará las habitaciones según disponibilidad</span>
            </li>
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-accent)]"></span>
              </span>
              <span>Recibirá un email con un enlace para proporcionar los datos de huéspedes</span>
            </li>
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-accent)]"></span>
              </span>
              <span>Posibilidad de editar datos en el panel de administración</span>
            </li>
          </ul>
          
          <div className="text-sm text-gray-500 italic">
            Recomendado si aún no tiene la información completa de los huéspedes
          </div>
        </div>
      </div>

      <div className="flex items-center justify-center mt-8">
        <button
          type="button"
          onClick={handleContinue}
          disabled={!selectedMode}
          className={`px-8 py-3 rounded-lg transition-all duration-300 flex items-center space-x-2 ${
            selectedMode 
              ? 'bg-[var(--color-primary)] hover:bg-[var(--color-primary-dark)] text-white' 
              : 'bg-gray-200 cursor-not-allowed text-gray-500'
          }`}
        >
          <span className="font-medium">Continuar</span>
          <FaChevronRight />
        </button>
      </div>

      {selectedMode === 'usuario' && (
        <div className="mt-8">
          <h3 className="text-xl font-semibold text-[var(--color-primary)] mb-4">
            Seleccione sus habitaciones ({habitacionesSeleccionadas.length}/{numeroHabitaciones})
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
            {tiposHabitaciones.map((habitacion) => (
              <div
                key={habitacion.id}
                onClick={() => toggleHabitacion(habitacion.id)}
                className={`p-4 rounded-xl cursor-pointer transition-all duration-300 border-2 ${
                  habitacionesSeleccionadas.some(h => h.id === habitacion.id)
                    ? 'bg-gradient-to-r from-[#E6DCC6] to-[#D1B59B] border-[#A5856A] text-[#0F0F0F] shadow-md'
                    : 'border-gray-200 hover:border-[var(--color-primary)]/50'
                }`}
              >
                <div className="flex items-center mb-2">
                  <div className="w-10 h-10 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-3">
                    <FaBed className="text-[var(--color-primary)]" />
                  </div>
                  <div>
                    <h4 className="font-medium">{habitacion.nombre}</h4>
                    <p className="text-sm text-gray-600">{habitacion.precio}</p>
                  </div>
                </div>
                <p className="text-sm text-gray-600 mt-2">{habitacion.descripcion}</p>
                <p className="text-sm font-medium mt-1">Capacidad: {habitacion.capacidad} {habitacion.capacidad === 1 ? 'persona' : 'personas'}</p>
              </div>
            ))}
          </div>
        </div>
      )}

      {selectedMode === 'hacienda' && (
        <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <div className="flex items-start">
            <FaEnvelope className="text-blue-500 mt-1 mr-3 flex-shrink-0" />
            <div>
              <h4 className="font-medium text-blue-700">Información importante</h4>
              <p className="text-sm text-blue-600 mt-1">
                Al seleccionar esta opción, se enviará un correo electrónico al personal de la hacienda con los detalles de su reserva.
                Ellos se pondrán en contacto con usted para gestionar la asignación de habitaciones y recopilar la información de los huéspedes. Todos los datos proporcionados en este formulario estarán disponibles para su edición en el panel de administración.
              </p>
            </div>
          </div>
        </div>
      )}
      
      {habitacionesSeleccionadas.length > 0 && (
        <div className="mt-6 p-4 bg-[#F0E8DC] border border-[#D1B59B] rounded-lg shadow-sm">
          <h4 className="text-lg font-semibold text-[#7B5C44] mb-3">Resumen de habitaciones seleccionadas</h4>
          <div className="divide-y divide-[#D1B59B]/30">
            {habitacionesSeleccionadas.map((habitacion) => (
              <div key={habitacion.id} className="py-3 flex justify-between items-center">
                <div className="flex items-center">
                  <div className="w-10 h-10 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-3">
                    <FaBed className="text-[var(--color-primary)]" />
                  </div>
                  <div>
                    <h5 className="font-medium text-[#5D4B3A]">{habitacion.nombre}</h5>
                    <p className="text-sm text-[#8A6E52]">Capacidad: {habitacion.capacidad} {habitacion.capacidad === 1 ? 'persona' : 'personas'}</p>
                  </div>
                </div>
                <div className="text-right">
                  <p className="font-medium text-[#5D4B3A]">{habitacion.precio}</p>
                  <button 
                    onClick={(e) => {
                      e.stopPropagation();
                      toggleHabitacion(habitacion.id);
                    }}
                    className="text-xs text-red-500 hover:text-red-700 transition-colors"
                  >
                    Eliminar
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
};

export default ModoGestionHabitaciones;

          </div>
        </div>

        {/* Opción 2: Gestión por la hacienda */}
        <div
          onClick={() => handleSelectMode('hacienda')}
          className={`p-6 rounded-2xl cursor-pointer transition-all duration-300 border-2 ${
            selectedMode === 'hacienda'
              ? 'border-[var(--color-primary)] bg-[var(--color-primary)]/10'
              : 'border-gray-200 hover:border-[var(--color-primary)]/50'
          }`}
        >
          <div className="flex items-center mb-4">
            <div className="w-16 h-16 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-4">
              <FaUserCog className="w-8 h-8 text-[var(--color-accent)]" />
            </div>
            <div>
              <h3 className="text-lg font-semibold">Gestión por la Hacienda</h3>
              <p className="text-sm text-gray-500">El personal de la hacienda gestiona los detalles</p>
            </div>
          </div>
          
          <ul className="space-y-2 text-gray-600 mb-4">
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-accent)]"></span>
              </span>
              <span>El personal asignará las habitaciones según disponibilidad</span>
            </li>
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-accent)]"></span>
              </span>
              <span>Recibirá un email con un enlace para proporcionar los datos de huéspedes</span>
            </li>
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-accent)]"></span>
              </span>
              <span>Posibilidad de editar datos en el panel de administración</span>
            </li>
          </ul>
          
          <div className="text-sm text-gray-500 italic">
            Recomendado si aún no tiene la información completa de los huéspedes
          </div>
        </div>
      </div>

      <div className="flex items-center justify-center mt-8">
        <button
          type="button"
          onClick={handleContinue}
          disabled={!selectedMode}
          className={`px-8 py-3 rounded-lg transition-all duration-300 flex items-center space-x-2 ${
            selectedMode 
              ? 'bg-[var(--color-primary)] hover:bg-[var(--color-primary-dark)] text-white' 
              : 'bg-gray-200 cursor-not-allowed text-gray-500'
          }`}
        >
          <span className="font-medium">Continuar</span>
          <FaChevronRight />
        </button>
      </div>

      {selectedMode === 'usuario' && (
        <div className="mt-8">
          <h3 className="text-xl font-semibold text-[var(--color-primary)] mb-4">
            Seleccione sus habitaciones ({habitacionesSeleccionadas.length}/{numeroHabitaciones})
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
            {tiposHabitaciones.map((habitacion) => (
              <div
                key={habitacion.id}
                onClick={() => toggleHabitacion(habitacion.id)}
                className={`p-4 rounded-xl cursor-pointer transition-all duration-300 border-2 ${
                  habitacionesSeleccionadas.some(h => h.id === habitacion.id)
                    ? 'bg-gradient-to-r from-[#E6DCC6] to-[#D1B59B] border-[#A5856A] text-[#0F0F0F] shadow-md'
                    : 'border-gray-200 hover:border-[var(--color-primary)]/50'
                }`}
              >
                <div className="flex items-center mb-2">
                  <div className="w-10 h-10 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-3">
                    <FaBed className="text-[var(--color-primary)]" />
                  </div>
                  <div>
                    <h4 className="font-medium">{habitacion.nombre}</h4>
                    <p className="text-sm text-gray-600">{habitacion.precio}</p>
                  </div>
                </div>
                <p className="text-sm text-gray-600 mt-2">{habitacion.descripcion}</p>
                <p className="text-sm font-medium mt-1">Capacidad: {habitacion.capacidad} {habitacion.capacidad === 1 ? 'persona' : 'personas'}</p>
              </div>
            ))}
          </div>
        </div>
      )}

      {selectedMode === 'hacienda' && (
        <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <div className="flex items-start">
            <FaEnvelope className="text-blue-500 mt-1 mr-3 flex-shrink-0" />
            <div>
              <h4 className="font-medium text-blue-700">Información importante</h4>
              <p className="text-sm text-blue-600 mt-1">
                Al seleccionar esta opción, se enviará un correo electrónico al personal de la hacienda con los detalles de su reserva.
                Ellos se pondrán en contacto con usted para gestionar la asignación de habitaciones y recopilar la información de los huéspedes. Todos los datos proporcionados en este formulario estarán disponibles para su edición en el panel de administración.
              </p>
            </div>
          </div>
        </div>
      )}
      
      {habitacionesSeleccionadas.length > 0 && (
        <div className="mt-6 p-4 bg-[#F0E8DC] border border-[#D1B59B] rounded-lg shadow-sm">
          <h4 className="text-lg font-semibold text-[#7B5C44] mb-3">Resumen de habitaciones seleccionadas</h4>
          <div className="divide-y divide-[#D1B59B]/30">
            {habitacionesSeleccionadas.map((habitacion) => (
              <div key={habitacion.id} className="py-3 flex justify-between items-center">
                <div className="flex items-center">
                  <div className="w-10 h-10 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-3">
                    <FaBed className="text-[var(--color-primary)]" />
                  </div>
                  <div>
                    <h5 className="font-medium text-[#5D4B3A]">{habitacion.nombre}</h5>
                    <p className="text-sm text-[#8A6E52]">Capacidad: {habitacion.capacidad} {habitacion.capacidad === 1 ? 'persona' : 'personas'}</p>
                  </div>
                </div>
                <div className="text-right">
                  <p className="font-medium text-[#5D4B3A]">{habitacion.precio}</p>
                  <button 
                    onClick={(e) => {
                      e.stopPropagation();
                      toggleHabitacion(habitacion.id);
                    }}
                    className="text-xs text-red-500 hover:text-red-700 transition-colors"
                  >
                    Eliminar
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
};

export default ModoGestionHabitaciones;

          </div>
        </div>

        {/* Opción 2: Gestión por la hacienda */}
        <div
          onClick={() => handleSelectMode('hacienda')}
          className={`p-6 rounded-2xl cursor-pointer transition-all duration-300 border-2 ${
            selectedMode === 'hacienda'
              ? 'border-[var(--color-primary)] bg-[var(--color-primary)]/10'
              : 'border-gray-200 hover:border-[var(--color-primary)]/50'
          }`}
        >
          <div className="flex items-center mb-4">
            <div className="w-16 h-16 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-4">
              <FaUserCog className="w-8 h-8 text-[var(--color-accent)]" />
            </div>
            <div>
              <h3 className="text-lg font-semibold">Gestión por la Hacienda</h3>
              <p className="text-sm text-gray-500">El personal de la hacienda gestiona los detalles</p>
            </div>
          </div>
          
          <ul className="space-y-2 text-gray-600 mb-4">
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-accent)]"></span>
              </span>
              <span>El personal asignará las habitaciones según disponibilidad</span>
            </li>
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-accent)]"></span>
              </span>
              <span>Recibirá un email con un enlace para proporcionar los datos de huéspedes</span>
            </li>
            <li className="flex items-start">
              <span className="w-5 h-5 rounded-full bg-[var(--color-accent)]/10 flex items-center justify-center mr-2 flex-shrink-0 mt-0.5">
                <span className="w-2 h-2 rounded-full bg-[var(--color-accent)]"></span>
              </span>
              <span>Posibilidad de editar datos en el panel de administración</span>
            </li>
          </ul>
          
          <div className="text-sm text-gray-500 italic">
            Recomendado si aún no tiene la información completa de los huéspedes
          </div>
        </div>
      </div>

      <div className="flex items-center justify-center mt-8">
        <button
          type="button"
          onClick={handleContinue}
          disabled={!selectedMode}
          className={`px-8 py-3 rounded-lg transition-all duration-300 flex items-center space-x-2 ${
            selectedMode 
              ? 'bg-[var(--color-primary)] hover:bg-[var(--color-primary-dark)] text-white' 
              : 'bg-gray-200 cursor-not-allowed text-gray-500'
          }`}
        >
          <span className="font-medium">Continuar</span>
          <FaChevronRight />
        </button>
      </div>

      {selectedMode === 'usuario' && (
        <div className="mt-8">
          <h3 className="text-xl font-semibold text-[var(--color-primary)] mb-4">
            Seleccione sus habitaciones ({habitacionesSeleccionadas.length}/{numeroHabitaciones})
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
            {tiposHabitaciones.map((habitacion) => (
              <div
                key={habitacion.id}
                onClick={() => toggleHabitacion(habitacion.id)}
                className={`p-4 rounded-xl cursor-pointer transition-all duration-300 border-2 ${
                  habitacionesSeleccionadas.some(h => h.id === habitacion.id)
                    ? 'bg-gradient-to-r from-[#E6DCC6] to-[#D1B59B] border-[#A5856A] text-[#0F0F0F] shadow-md'
                    : 'border-gray-200 hover:border-[var(--color-primary)]/50'
                }`}
              >
                <div className="flex items-center mb-2">
                  <div className="w-10 h-10 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-3">
                    <FaBed className="text-[var(--color-primary)]" />
                  </div>
                  <div>
                    <h4 className="font-medium">{habitacion.nombre}</h4>
                    <p className="text-sm text-gray-600">{habitacion.precio}</p>
                  </div>
                </div>
                <p className="text-sm text-gray-600 mt-2">{habitacion.descripcion}</p>
                <p className="text-sm font-medium mt-1">Capacidad: {habitacion.capacidad} {habitacion.capacidad === 1 ? 'persona' : 'personas'}</p>
              </div>
            ))}
          </div>
        </div>
      )}

      {selectedMode === 'hacienda' && (
        <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <div className="flex items-start">
            <FaEnvelope className="text-blue-500 mt-1 mr-3 flex-shrink-0" />
            <div>
              <h4 className="font-medium text-blue-700">Información importante</h4>
              <p className="text-sm text-blue-600 mt-1">
                Al seleccionar esta opción, se enviará un correo electrónico al personal de la hacienda con los detalles de su reserva.
                Ellos se pondrán en contacto con usted para gestionar la asignación de habitaciones y recopilar la información de los huéspedes. Todos los datos proporcionados en este formulario estarán disponibles para su edición en el panel de administración.
              </p>
            </div>
          </div>
        </div>
      )}
      
      {habitacionesSeleccionadas.length > 0 && (
        <div className="mt-6 p-4 bg-[#F0E8DC] border border-[#D1B59B] rounded-lg shadow-sm">
          <h4 className="text-lg font-semibold text-[#7B5C44] mb-3">Resumen de habitaciones seleccionadas</h4>
          <div className="divide-y divide-[#D1B59B]/30">
            {habitacionesSeleccionadas.map((habitacion) => (
              <div key={habitacion.id} className="py-3 flex justify-between items-center">
                <div className="flex items-center">
                  <div className="w-10 h-10 rounded-full bg-[var(--color-primary)]/10 flex items-center justify-center mr-3">
                    <FaBed className="text-[var(--color-primary)]" />
                  </div>
                  <div>
                    <h5 className="font-medium text-[#5D4B3A]">{habitacion.nombre}</h5>
                    <p className="text-sm text-[#8A6E52]">Capacidad: {habitacion.capacidad} {habitacion.capacidad === 1 ? 'persona' : 'personas'}</p>
                  </div>
                </div>
                <div className="text-right">
                  <p className="font-medium text-[#5D4B3A]">{habitacion.precio}</p>
                  <button 
                    onClick={(e) => {
                      e.stopPropagation();
                      toggleHabitacion(habitacion.id);
                    }}
                    className="text-xs text-red-500 hover:text-red-700 transition-colors"
                  >
                    Eliminar
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
};

export default ModoGestionHabitaciones;
